/* -----------------------------------------------------------------------------
 * MEDIAQUERIES
 */


// Functions
// -----------------------------------------------------------------------------

// Get next breakpoint in map

@function map-next-value($_map, $_input) {
  $_values: map-values($_map);

  @if number($_input) or unit($_input) == 'px' {
    @return $_input;
  }


  @each $_value in $_values {
     @if px-to-em($_value) >= px-to-em($_input){
      @return $_value;
    }
  }

  @error 'Next value not defined.';
}

// Type of breakpoint

@function breakpoint-type($_value) {
  @if type-of($_value) == number{
    @return px-to-em($_value);
  }
  @else if map-has-key($f-mq-breakpoints, $_value) {
     @return px-to-em(map-get($f-mq-breakpoints, $_value));
  }

  @else if $_value == 'up' or $_value == 'down' or $_value == 'only' {
    @return $_value;
  }
  @else {
     @error"El breakpoint `#{$_value}` no existe. Crea uno nuevo, elige uno de estos: #{map-keys($f-mq-breakpoints)} o escribe un valor en pixeles.";
  }
}

// Set breakpoint

@function breakpoint($_value) {
  @if $_value == 'retina' {
    @return '(-webkit-min-device-pixel-ratio: 2), screen and (min-resolution: 192dpi)';
  }

  @else if $_value == 'landscape' or $_value == 'portrait' {
    @return '(orientation: #{$_value})';
  }

  $_breakpoint: breakpoint-type(nth($_value, 1));
  $_breakpoint-next: px-to-em(map-next-value($f-mq-breakpoints, $_breakpoint));
  $_breakpoint-direction: if(length($_value) > 1, breakpoint-type(nth($_value, 2)), 'up');
  $_result: '';

  @if $_breakpoint-direction == 'up' {
    $_result: $_result + '(min-width: #{$_breakpoint})';
  }

  @else if $_breakpoint-direction == 'down' {
    $_result: $_result + '(max-width: #{$_breakpoint - px-to-em(1px)})';
  }

  @else if $_breakpoint-direction == 'only' {
    $_result: $_result + '(min-width: #{$_breakpoint}) and (max-width: #{$_breakpoint-next - px-to-em(1px)})';
  }
  @else if type-of($_breakpoint-direction) == number and $_breakpoint < $_breakpoint-direction {
    $_result: $_result + '(min-width: #{$_breakpoint}) and (max-width: #{$_breakpoint-direction - px-to-em(1px)})';
  }
  @else {
     @error"El breakpoint no puede ser el mismo ni más pequeño. Ejemplo correcto: (small medium) o (544px 768px)";
  }
  @return $_result;
}


// Mixin
// -----------------------------------------------------------------------------

@mixin breakpoint($_value, $_media-type: $f-mq-media-type) {
  $_result: breakpoint($_value);
  @media #{$_media-type} and #{$_result} {
     @content;
  }
}